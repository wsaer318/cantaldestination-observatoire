# Script PowerShell pour configurer la t√¢che planifi√©e de nettoyage des caches
# FluxVision - Automatisation du nettoyage √† minuit
# 
# Ex√©cution: Clic droit > Ex√©cuter avec PowerShell (en tant qu'administrateur)

param(
    [string]$TaskName = "FluxVision_Cache_Cleanup",
    [string]$Description = "Nettoyage automatique des caches FluxVision √† minuit",
    [string]$Time = "00:00"
)

Write-Host "üîß Configuration de la t√¢che planifi√©e FluxVision" -ForegroundColor Cyan
Write-Host "=================================================" -ForegroundColor Cyan

# V√©rifier les privil√®ges administrateur
if (-NOT ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] "Administrator")) {
    Write-Host "‚ùå ERREUR: Ce script doit √™tre ex√©cut√© en tant qu'administrateur" -ForegroundColor Red
    Write-Host "   Clic droit > Ex√©cuter en tant qu'administrateur" -ForegroundColor Yellow
    Read-Host "Appuyez sur Entr√©e pour fermer"
    exit 1
}

# Chemins
$ScriptDir = Split-Path -Parent $MyInvocation.MyCommand.Path
$BatchPath = Join-Path $ScriptDir "clear_cache_midnight.bat"
$FluxVisionRoot = Split-Path -Parent $ScriptDir

Write-Host "üìÅ R√©pertoire du script: $ScriptDir" -ForegroundColor Gray
Write-Host "üìÅ Racine FluxVision: $FluxVisionRoot" -ForegroundColor Gray

# V√©rifier que le fichier batch existe
if (-not (Test-Path $BatchPath)) {
    Write-Host "‚ùå ERREUR: Fichier batch non trouv√©: $BatchPath" -ForegroundColor Red
    Read-Host "Appuyez sur Entr√©e pour fermer"
    exit 1
}

try {
    # Supprimer la t√¢che existante si elle existe
    $existingTask = Get-ScheduledTask -TaskName $TaskName -ErrorAction SilentlyContinue
    if ($existingTask) {
        Write-Host "üóëÔ∏è Suppression de la t√¢che existante..." -ForegroundColor Yellow
        Unregister-ScheduledTask -TaskName $TaskName -Confirm:$false
    }

    # Cr√©er l'action (ex√©cution du batch)
    $Action = New-ScheduledTaskAction -Execute $BatchPath

    # Cr√©er le d√©clencheur (tous les jours √† minuit)
    $Trigger = New-ScheduledTaskTrigger -Daily -At $Time

    # Cr√©er les param√®tres de la t√¢che
    $Settings = New-ScheduledTaskSettingsSet -AllowStartIfOnBatteries -DontStopIfGoingOnBatteries -StartWhenAvailable

    # Cr√©er le principal (utilisateur syst√®me pour √©viter les probl√®mes de session)
    $Principal = New-ScheduledTaskPrincipal -UserId "SYSTEM" -LogonType ServiceAccount -RunLevel Highest

    # Enregistrer la t√¢che planifi√©e
    Write-Host "‚öôÔ∏è Cr√©ation de la t√¢che planifi√©e..." -ForegroundColor Green
    Register-ScheduledTask -TaskName $TaskName -Action $Action -Trigger $Trigger -Settings $Settings -Principal $Principal -Description $Description

    Write-Host ""
    Write-Host "‚úÖ SUCC√àS: T√¢che planifi√©e configur√©e avec succ√®s!" -ForegroundColor Green
    Write-Host ""
    Write-Host "üìã D√©tails de la t√¢che:" -ForegroundColor Cyan
    Write-Host "   ‚Ä¢ Nom: $TaskName" -ForegroundColor White
    Write-Host "   ‚Ä¢ Heure d'ex√©cution: $Time (tous les jours)" -ForegroundColor White
    Write-Host "   ‚Ä¢ Script: $BatchPath" -ForegroundColor White
    Write-Host "   ‚Ä¢ Utilisateur: SYSTEM" -ForegroundColor White
    Write-Host ""
    Write-Host "üîç Pour v√©rifier:" -ForegroundColor Yellow
    Write-Host "   1. Ouvrir le Planificateur de t√¢ches Windows" -ForegroundColor White
    Write-Host "   2. Aller dans 'Biblioth√®que du Planificateur de t√¢ches'" -ForegroundColor White
    Write-Host "   3. Chercher '$TaskName'" -ForegroundColor White
    Write-Host ""
    Write-Host "üß™ Pour tester maintenant:" -ForegroundColor Yellow
    Write-Host "   Start-ScheduledTask -TaskName '$TaskName'" -ForegroundColor White
    Write-Host ""

    # Proposer un test imm√©diat
    $test = Read-Host "Voulez-vous tester la t√¢che maintenant? (o/N)"
    if ($test -eq "o" -or $test -eq "O" -or $test -eq "oui") {
        Write-Host "üß™ Test de la t√¢che en cours..." -ForegroundColor Yellow
        Start-ScheduledTask -TaskName $TaskName
        Start-Sleep 3
        
        $taskInfo = Get-ScheduledTask -TaskName $TaskName
        $lastResult = (Get-ScheduledTaskInfo -TaskName $TaskName).LastTaskResult
        
        if ($lastResult -eq 0) {
            Write-Host "‚úÖ Test r√©ussi! V√©rifiez les logs dans $FluxVisionRoot\logs\" -ForegroundColor Green
        } else {
            Write-Host "‚ö†Ô∏è Test termin√© avec le code: $lastResult" -ForegroundColor Yellow
            Write-Host "   V√©rifiez les logs pour plus de d√©tails." -ForegroundColor White
        }
    }

} catch {
    Write-Host "‚ùå ERREUR lors de la configuration:" -ForegroundColor Red
    Write-Host $_.Exception.Message -ForegroundColor Red
}

Write-Host ""
Write-Host "Appuyez sur Entr√©e pour fermer..." -ForegroundColor Gray
Read-Host 